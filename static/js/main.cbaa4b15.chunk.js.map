{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","nanoid","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","styles","contact_form","this","label","htmlFor","input","type","onChange","pattern","title","placeholder","id","required","submit","Component","Filter","filter","ContactsList","renderContacts","deleteContact","list","map","el","item","span","btn","onClick","App","contacts","formSubmitData","newItem","some","alert","prevStates","changeFilter","toLowerCaseFilter","toLowerCase","includes","prevState","JSON","parse","localStorage","getItem","prevProps","snapshot","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbaa4b15.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_form\":\"ContactForm_contact_form__m9hp5\",\"label\":\"ContactForm_label__a_l0Y\",\"input\":\"ContactForm_input__33yWk\",\"submit\":\"ContactForm_submit__3YOD6\"};","import React, { Component } from 'react';\nimport styles from './ContactForm.module.css';\nimport { nanoid } from 'nanoid';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = nanoid();\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form className={styles.contact_form} onSubmit={this.handleSubmit}>\n        <label className={styles.label} htmlFor={this.nameInputId}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Ivan Dulin\"\n            id={this.nameInputId}\n            required\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"067-233-15-14\"\n            required\n          />\n        </label>\n        <button className={styles.submit} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={styles.filter}>\n      <label className={styles.label}>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nconst ContactsList = ({ renderContacts, deleteContact }) => {\n  return (\n    <ul className={styles.list}>\n      {renderContacts.map(el => {\n        return (\n          <li className={styles.item} key={el.id}>\n            <span className={styles.span}>\n              {el.name}: {el.number}\n            </span>\n            <button\n              className={styles.btn}\n              type=\"button\"\n              id={el.id}\n              onClick={() => {\n                deleteContact(el.id);\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  renderContacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactsList from './components/ContactList/ContactList';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n    if (contacts) {\n      this.setState({ contacts: contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  formSubmitData = ({ name, number }) => {\n    const newItem = { id: nanoid(), name: name, number: number };\n    let isUnique = this.state.contacts.some(el => el.name === name);\n    if (!isUnique) {\n      this.setState(prevStates => ({\n        contacts: [...prevStates.contacts, newItem],\n      }));\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  renderContacts = () => {\n    const { filter, contacts } = this.state;\n    const toLowerCaseFilter = filter.toLowerCase();\n    return contacts.filter(el =>\n      el.name.toLowerCase().includes(toLowerCaseFilter),\n    );\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(el => el.id !== id),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    return (\n      <main className=\"main\">\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitData} />\n        <h2 className=\"title\">Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactsList\n          renderContacts={this.renderContacts()}\n          deleteContact={this.deleteContact}\n        />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3lJhu\",\"item\":\"ContactList_item__3_h9y\",\"btn\":\"ContactList_btn__3tjWf\",\"span\":\"ContactList_span__ZtI3V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1zLCk\",\"input\":\"Filter_input__2nqDG\"};"],"sourceRoot":""}